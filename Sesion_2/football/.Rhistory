install.packages("shiny")
getwd()
setwd("/home/komsal/Documentos/Proyectos/BEDU_R/Sesion_1")
setwd("/home/komsal/Documentos/Proyectos/BEDU_R/Sesion_1")
write.csv(net.2015, "res.netflix.csv")
netflix.titles <- read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
dim(netflix.titles); class(netflix.titles)#dimencion y tipo de objeto
net.2015 <- netflix.titles[netflix.titles$release_year > 2015,]
write.csv(net.2015, "res.netflix.csv")
title(netflix.titles)
title("netflix.titles")
class(netflix.titles)
ran <- rnorm(44)
calc <- 0
for(i in 1:15) {
calc[i] <- (ran[i]**2)+12
}
df.al <- data.frame(aleatorio = ran[1:15], calculo = calc)
amazon.best <- read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/bestsellers%20with%20categories.csv")
head(amazon.best)
tAmazon <- as.data.frame(t(amazon.best))
head(tAmazon)
?row.names
row.names(amazon.best)
row.names(tAmazon)
?colnames
?as.data.frame
?t
row.names(tAmazon)
colnames(tAmazon) <- tAmazon[1,]
row.names(tAmazon)
which.max(tAmazon["Price",])
?which.max
tAmazon[,3]
tAmazon[,4]
tAmazon[,10]
which.min(tAmazon["Price",])
tAmazon[,1]
tAmazon[,2]
tAmazon["Price",]
colnames(tAmazon) <- tAmazon[1,]
tAmazon[1,]
tAmazon[2,]
tAmazon[1,]
colnames(tAmazon) <- tAmazon[1,]
colnames(tAmazon)
colnames(tAmazon) <- tAmazon[2,]
colnames(tAmazon)
colnames(tAmazon) <- tAmazon[1,]
colnames(tAmazon)
colnames(tAmazon) <- c(tAmazon[1,])
colnames(tAmazon)
amazon.best[1,]
amazon.best[,1]
tAmazon <- as.data.frame(t(amazon.best))
tAmazon[1,]
colnames(tAmazon) <- tAmazon[1,]
tAmazon[1,]
hich.max(amazon.best[,"Price"])
x <- 6:8
y <- c("A", "B", "C")
(mifile <- data.frame(edad = x, grupo = y))
set.seed(134); x <- round(rnorm(1000, 175, 6), 1)
x
library(DescTools)
mean(x); median(x); Mode(x)
quantile(x, probs = seq(0.1, 0.9, 0.1))
quantile(x, 0.1, 0.5, 0.9)
quantile(x, c(0.1, 0.5, 0.9))
IQR(x); sd(x); var(x)
str(mtcars)
summary(mtcars)
head(mtcars)
View(mtcars)
mediana(1:10)
mediana <- function(vector){
size = length(vector)
vector <- sort(vector)# Ordenamos los valores de menor a mayor
if(size%%2 == 0){paste("Mediana: ", mean(vector[c(size/2, size/2+1)]))
} else{paste("La mediana es: ", vector[round(size/2)])}
}
mediana(1:10)
mediana(1:11)
mediana(1:11)
mediana(1:11)
setwd("/home/komsal/Documentos/Proyectos/BEDU_R/Sesion_2")
B1.2021 <- "https://www.football-data.co.uk/mmz4281/2021/D1.csv"
B1.1920 <- "https://www.football-data.co.uk/mmz4281/1920/D1.csv"
B1.1819 <- "https://www.football-data.co.uk/mmz4281/1819/D1.csv"
B1.1718 <- "https://www.football-data.co.uk/mmz4281/1718/D1.csv"
download.file(url = B1.2021, destfile = "B1.2021.csv", mode = "wb")
download.file(url = B1.1920, destfile = "B1.1920.csv", mode = "wb")
download.file(url = B1.1819, destfile = "B1.1819.csv", mode = "wb")
download.file(url = B1.1718, destfile = "B1.1718.csv", mode = "wb")
lista <- lapply(list.files(), read.csv)
list.files()
setwd("/home/komsal/Documentos/Proyectos/BEDU_R/Sesion_2/football")
lista <- lapply(list.files(), read.csv)
lista <- lapply(lista, select, Date, c(Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR))
lista <- lapply(lista, select, Date, HomeTeam:FTR)
?lapply
?select
lista <- lapply(lista, select, Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR)
lista <- lapply(lista, Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR)
names(lista)
names(lista[1])
lista[1]
head(lista[1])
sumary(lista[1])
summary(lista[1])
lista <- lapply(list.files(), read.csv)
lista <- lapply(lista, select, Date:FTR)
lista <- lapply(lista, select, Date:FTR)
lista <- do.call(lista, select, Date:FTR)
lista
lista[1]
class(lista)
class(lista[1])
mediana(1:11)
fut1 <- read.csv("B1.1718")
fut1 <- read.csv("B1.1718.csv")
fut2 <- read.csv("B1.1819.csv")
fut3 <- read.csv("B1.1920.csv")
fut4 <- read.csv("B1.2021.csv")
lista <- c[fut1, fut2, fut3, fut4]
class(fut1)
lista <- list(fut1, fut2, fut3, fut4)
lista <- lapply(lista, select, Date:FTR)
lista <- lapply(select, lista, Date:FTR)
lista <- apply(lista, select, Date:FTR)
lista <- lapply(select, lista, Date:FTR)
lista <- lapply(lista, select, Date:FTR)
lista <- lapply(lista, FUN = select, Date:FTR)
select(fut1, Date:FTR)
select
library(sos)
library(dplyr)
lista <- apply(lista, select, Date:FTR)
lista <- lapply(dir(), read.csv)
lista <- apply(lista, select, Date:FTR)
lista <- lapply(lista, select, Date, HomeTeam:FTR)
lista <- list(fut1, fut2, fut3, fut4)
ista <- lapply(lista, select, Date, HomeTeam:FTR)
lista <- lapply(lista, select, Date, HomeTeam:FTR)
data <- do.call(rbind, lista)
head(data); tail(data)
jugadores <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-con-R-Santander/master/Sesion-03/Reto-02/players_stats.csv")
promedio.minutos <-mean(jugadores$MIN)
ggplot(jugadores, aes(MIN))+
geom_histogram(binwidth = 30, col="blue") +
ggtitle("Minutos de jugadores") +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  promedio.minutos, col = "black", lwd = 1.5, lty =2)
library(ggplot2)
ggplot(jugadores, aes(MIN))+
geom_histogram(binwidth = 30, col="blue") +
ggtitle("Minutos de jugadores") +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  promedio.minutos, col = "black", lwd = 1.5, lty =2)
promedio.edad <-mean(na.omit(jugadores$Age))
ggplot(jugadores, aes(Age)+
e
wekfhb
ggplot(jugadores, aes(Age))+
geom_histogram(binwidth = 2, col="black", fill = "red")
ggplot(jugadores, aes(Age))+
geom_histogram(binwidth = 20, col="black", fill = "red")
ggplot(jugadores, aes(Age))+
geom_histogram(binwidth = 1, col="black", fill = "red")
ggplot(jugadores, aes(MIN))+
geom_histogram(binwidth = 15, col="blue") +
ggtitle("Minutos de jugadores") +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  promedio.minutos, col = "black", lwd = 1.5, lty =2)
ggplot(jugadores, aes(MIN))+
geom_histogram(binwidth = 30, col="blue") +
ggtitle("Minutos de jugadores") +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  promedio.minutos, col = "black", lwd = 1.5, lty =2)
ggplot(jugadores, aes(MIN))+
geom_histogram(binwidth = 100, col="blue") +
ggtitle("Minutos de jugadores") +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  promedio.minutos, col = "black", lwd = 1.5, lty =2)
ggplot(jugadores, aes(Age))+
geom_histogram(binwidth = 1, col="black", fill = "red")
ggplot(jugadores, aes(Age))+
geom_histogram(binwidth = 2, col="black", fill = "red")
ggplot(jugadores, aes(Age))+
geom_histogram(binwidth = 1, col="black", fill = "red")
#scatter point peso y altura
p <- nba %>% ggplot(aes(Weight, Height)) + geom_point()
#scatter point peso y altura
p <- jugadores %>% ggplot(aes(Weight, Height)) + geom_point()
p
(lmnba <- coef(lm(Height ~ Weight, data = nba)))
(lmnba <- coef(lm(Height ~ Weight, data = jugadores)))
#> (Intercept)          MIN
#>   -136.129102   1.193261
p + geom_abline(intercept = lmnba[1], slope = lmnba[2], col = "red", lwd = 1.5, lty = 2)
#> (Intercept)          MIN
#>   -136.129102   1.193261
p + geom_abline(intercept = lmnba[1], slope = lmnba[2], col = "blue", lwd = 1.5, lty = 2)
#4. Jugador más alto
alto <- which.max(nba$Height)
paste("El jugador más alto es:", jugadores$Name[alto],"con una altura de:" , round(nba$Height[alto]/100,2), "m")
#4. Jugador más alto
alto <- which.max(jugadores$Height)
paste("El jugador más alto es:", jugadores$Name[alto],"con una altura de:" , round(jugadores$Height[alto]/100,2), "m")
#5. Jugador más bajo
(bajito <- which.min(jugadores$Height))
paste("El jugador más bajito es:", jugadores$Name[bajito],"con una altura de:" ,round(jugadores$Height[bajito]/100,2), "m")
#6. La altura promedio, (Hint: hay que utilizar na.omit en caso de presencia de NA´s)
(altura.m <- mean(na.omit(jugadores$Height)))
paste("La altura promedio es:", round(altura.m/100,2),"m")
# 7. Scatterplot de Asistencias totales vs Puntos, con un face wrap por posición.
nba %>% ggplot( aes(AST.TOV, PTS )) +
geom_point() +
facet_wrap("Pos")
# 7. Scatterplot de Asistencias totales vs Puntos, con un face wrap por posición.
jugadores %>% ggplot( aes(AST.TOV, PTS )) +
geom_point() +
facet_wrap("Pos")
df.1920 = read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
af
segdrh
df.1920 = read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
altura <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-con-R-Santander/master/Sesion-03/Reto-01/BD_Altura_Alunos.csv", sep=";")
head(altura)
hist(altura$Altura,
breaks = 40,
main = "Altura alumnos",
ylab = "Frecuencia",
xlab = "Altura",
col = "red")
ggplot(jugadores, aes(Altura))+
geom_histogram(binwidth = 100, col="red") +
ggtitle("Altura alumnos") +
ylab("Frecuencia") +
xlab("Altura") +
;
ggplot(jugadores, aes(Altura))+
geom_histogram(binwidth = 100, col="red") +
ggtitle("Altura alumnos") +
ylab("Frecuencia") +
xlab("Altura")
ggplot(alturas, aes(Altura))+
geom_histogram(binwidth = 100, col="red") +
ggtitle("Altura alumnos") +
ylab("Frecuencia") +
xlab("Altura")
ggplot(altura, aes(Altura))+
geom_histogram(binwidth = 100, col="red") +
ggtitle("Altura alumnos") +
ylab("Frecuencia") +
xlab("Altura")
ggplot(altura, aes(Altura))+
geom_histogram(binwidth = 40, col="red") +
ggtitle("Altura alumnos") +
ylab("Frecuencia") +
xlab("Altura")
ggplot(altura, aes(Altura))+
geom_histogram(binwidth = 10, col="red") +
ggtitle("Altura alumnos") +
ylab("Frecuencia") +
xlab("Altura")
ggplot(altura, aes(Altura))+
geom_histogram(binwidth = 5, col="red") +
ggtitle("Altura alumnos") +
ylab("Frecuencia") +
xlab("Altura")
hist(altura$Altura,
breaks = 40,
main = "Altura alumnos",
ylab = "Frecuencia",
xlab = "Altura",
col = "red")
ggplot(altura, aes(Altura))+
geom_histogram(binwidth = 1, col="red") +
ggtitle("Altura alumnos") +
ylab("Frecuencia") +
xlab("Altura")
df.1920 <- read.csv("https://www.football-data.co.uk/mmz4281/1718/SP1.csv")
df.1920 <- read.csv("https://www.football-data.co.uk/mmz4281/1819/SP1.csv")
df.1920 <- read.csv("https://www.football-data.co.uk/mmz4281/1718/SP1.csv")
df.1920 <- read.csv("https://www.football-data.co.uk/mmz4281/1819/SP1.csv")
df.1920 <- read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
df.1927 <- read.csv("https://www.football-data.co.uk/mmz4281/1718/SP1.csv")
df.1928 <- read.csv("https://www.football-data.co.uk/mmz4281/1819/SP1.csv")
df.1917 <- read.csv("https://www.football-data.co.uk/mmz4281/1718/SP1.csv")
df.1918 <- read.csv("https://www.football-data.co.uk/mmz4281/1819/SP1.csv")
df.1919 <- read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
df.1718 <- read.csv("https://www.football-data.co.uk/mmz4281/1718/SP1.csv")
df.1819 <- read.csv("https://www.football-data.co.uk/mmz4281/1819/SP1.csv")
df.1920 <- read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
str(df.1718); head(df.1718); View(df.1718); summary(df.17180)
str(df.1718); head(df.1718); View(df.1718); summary(df.1718)
str(df.1819); head(df.1819); View(df.1819); summary(df.1819)
str(df.1920); head(df.1920); View(df.1920); summary(df.1920)
lista <- list(df.1718, df.1819, df.1920)
library(dplyr)
lista <- lapply(lista, select, Date, HomeTeam:FTR)
head(lista[1])
lista <- lapply(lista, mutate, Date = as.Date(Date, "%d/%m/%Y"))
head(lista[1])
df.1920s = mutate(df.1920s, Date = as.Date(Date, "%d/%m/%Y"))
df.1920 = mutate(df.1920s, Date = as.Date(Date, "%d/%m/%Y"))
df.1920 = mutate(df.1920, Date = as.Date(Date, "%d/%m/%Y"))
head(df.1920)
df.all = do.call(rbind, lista)
